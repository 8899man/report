/*
 * Tceon.com Inc.
 * Copyright (c) 2009 All Rights Reserved.
 */
package com.taicang.mscz.report.common.dal.ibatis;

import java.util.HashMap;
import java.util.Map;

import org.springframework.dao.DataAccessException;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.taicang.mscz.report.common.dal.daointerface.ReportDAO;
import com.taicang.mscz.report.common.dal.dataobject.ReportDO;
import com.taicang.mscz.report.dal.util.PageList;
import com.taicang.mscz.report.dal.util.Paginator;

/**
 * An ibatis based implementation of dao interface <tt>com.taicang.mscz.report.common.dal.daointerface.ReportDAO</tt>.
 *
 * This file is generated by <tt>paygw-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/report.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>paygw-dalgen</tt> 
 * to generate this file.
 *
 * @author Cheng Li
 */
public class IbatisReportDAO extends SqlMapClientDaoSupport implements ReportDAO {
	/**
	 *  Query DB table <tt>report</tt> for records.
	 *
   	 *  <p>
   	 *  Description for this operation is<br>
   	 *  <tt></tt>
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from report where (name = ?)</tt>
	 *
	 *	@param name
	 *	@return ReportDO
	 *	@throws DataAccessException
	 */	 
    public ReportDO getByName(String name) throws DataAccessException {

        return (ReportDO) getSqlMapClientTemplate().queryForObject("MS-REPORT-GET-BY-NAME", name);

    }

	/**
	 *  Query DB table <tt>report</tt> for records.
	 *
   	 *  <p>
   	 *  Description for this operation is<br>
   	 *  <tt></tt>
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from report where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return ReportDO
	 *	@throws DataAccessException
	 */	 
    public ReportDO getById(int id) throws DataAccessException {
        Integer param = new Integer(id);
        return (ReportDO) getSqlMapClientTemplate().queryForObject("MS-REPORT-GET-BY-ID", param);

    }

	/**
	 *  Insert one <tt>ReportDO</tt> object to DB table <tt>report</tt>, return primary key
	 *
   	 *  <p>
   	 *  Description for this operation is<br>
   	 *  <tt></tt>
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into report(name,submitter,create_time,modify_time) values (?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)</tt>
	 *
	 *	@param report
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int insert(ReportDO report) throws DataAccessException {
    	if (report == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-REPORT-INSERT", report);

        return report.getId();
    }

	/**
	 *  Query DB table <tt>report</tt> for records.
	 *
   	 *  <p>
   	 *  Description for this operation is<br>
   	 *  <tt></tt>
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from report</tt>
	 *
	 *	@param submitter
	 *	@param name
	 *	@param pageSize
	 *	@param pageNum
	 *	@return PageList
	 *	@throws DataAccessException
	 */	 
    public PageList getByCondition(String submitter, String name, int pageSize, int pageNum) throws DataAccessException {
        Map param = new HashMap();

        param.put("submitter", submitter);
        param.put("name", name);
        param.put("pageSize", new Integer(pageSize));
        param.put("pageNum", new Integer(pageNum));

        Paginator paginator = new Paginator();
        paginator.setItemsPerPage(pageSize);
        paginator.setPage(pageNum / pageSize + 1);

        paginator.setItems(((Integer) getSqlMapClientTemplate().queryForObject("MS-REPORT-REPORT-GET-BY-CONDITION-COUNT-FOR-PAGING", param)).intValue());
        
        PageList  pageList = new PageList();
        pageList.setPaginator(paginator);
        
        if (paginator.getBeginIndex() <= paginator.getItems()) {
            param.put("startRow", new Integer(paginator.getBeginIndex()));
            param.put("endRow", new Integer(paginator.getEndIndex()));
            pageList.addAll(getSqlMapClientTemplate().queryForList("MS-REPORT-GET-BY-CONDITION", param));
        }
        
        return pageList;
    }

}